{"ast":null,"code":"var _jsxFileName = \"/Users/anaventura/workspace/ahpsilva-app/src/components/carousel/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { ChevronLeft, ChevronRight } from 'react-feather';\nimport { useWindowSize } from '../../talons/windowSize';\nimport { CarouselContainer } from './styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Carousel(props) {\n  _s();\n\n  const {\n    children\n  } = props;\n  const [activeIndex, setActiveIndex] = useState(0);\n  const windowSize = useWindowSize;\n\n  const updateImage = newIndex => {\n    if (newIndex < 0) {\n      newIndex = React.Children.count(children) - 1;\n    } else if (newIndex >= React.Children.count(children) - 1) {\n      newIndex = 0;\n    }\n\n    setActiveIndex(newIndex);\n  }; //  if (!children) return null;\n\n\n  return /*#__PURE__*/_jsxDEV(CarouselContainer, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inner\",\n      style: {\n        transform: `translateX(-${activeIndex * 25}%)`\n      },\n      children: React.Children.map(children, (child, _index) => {\n        return /*#__PURE__*/React.cloneElement(child, {\n          width: \"33%\"\n        });\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"indicators\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn-prev\",\n        disabled: activeIndex <= 0,\n        onClick: () => updateImage(activeIndex - 1),\n        children: /*#__PURE__*/_jsxDEV(ChevronLeft, {\n          color: \"#fff\",\n          size: 36\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn-next\",\n        disabled: activeIndex === React.Children.count(children) - 1,\n        onClick: () => updateImage(activeIndex + 1),\n        children: /*#__PURE__*/_jsxDEV(ChevronRight, {\n          color: \"#fff\",\n          size: 36\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 10\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Carousel, \"rd+5N/MkYjuYD0I+B+MlySxQysU=\");\n\n_c = Carousel;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"Carousel\");","map":{"version":3,"sources":["/Users/anaventura/workspace/ahpsilva-app/src/components/carousel/index.tsx"],"names":["React","useState","ChevronLeft","ChevronRight","useWindowSize","CarouselContainer","Carousel","props","children","activeIndex","setActiveIndex","windowSize","updateImage","newIndex","Children","count","transform","map","child","_index","cloneElement","width"],"mappings":";;;AAAA,OAAOA,KAAP,IAA8BC,QAA9B,QAA8C,OAA9C;AACA,SAASC,WAAT,EAAsBC,YAAtB,QAA0C,eAA1C;AACA,SAASC,aAAT,QAA8B,yBAA9B;AACA,SAASC,iBAAT,QAAkC,UAAlC;;AAMA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAgC;AAAA;;AAC9C,QAAM;AAAEC,IAAAA;AAAF,MAAeD,KAArB;AACA,QAAM,CAACE,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,CAAC,CAAD,CAA9C;AAEA,QAAMU,UAAU,GAAGP,aAAnB;;AAEA,QAAMQ,WAAW,GAAIC,QAAD,IAAsB;AACzC,QAAIA,QAAQ,GAAG,CAAf,EAAkB;AAChBA,MAAAA,QAAQ,GAAGb,KAAK,CAACc,QAAN,CAAeC,KAAf,CAAqBP,QAArB,IAAiC,CAA5C;AACD,KAFD,MAEO,IAAIK,QAAQ,IAAIb,KAAK,CAACc,QAAN,CAAeC,KAAf,CAAqBP,QAArB,IAAiC,CAAjD,EAAoD;AACzDK,MAAAA,QAAQ,GAAG,CAAX;AACD;;AACDH,IAAAA,cAAc,CAACG,QAAD,CAAd;AACA,GAPD,CAN8C,CAe/C;;;AAEE,sBACE,QAAC,iBAAD;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAuB,MAAA,KAAK,EAAE;AAAEG,QAAAA,SAAS,EAAG,eAAcP,WAAW,GAAG,EAAG;AAA7C,OAA9B;AAAA,gBACGT,KAAK,CAACc,QAAN,CAAeG,GAAf,CAAmBT,QAAnB,EAA6B,CAACU,KAAD,EAAQC,MAAR,KAAmB;AAC/C,4BAAOnB,KAAK,CAACoB,YAAN,CAAmBF,KAAnB,EAA0B;AAAEG,UAAAA,KAAK,EAAE;AAAT,SAA1B,CAAP;AACD,OAFA;AADH;AAAA;AAAA;AAAA;AAAA,YADF,eAME;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACE;AAAQ,QAAA,SAAS,EAAC,UAAlB;AAA6B,QAAA,QAAQ,EAAEZ,WAAW,IAAI,CAAtD;AAAyD,QAAA,OAAO,EAAE,MAAMG,WAAW,CAACH,WAAW,GAAG,CAAf,CAAnF;AAAA,+BAEE,QAAC,WAAD;AAAa,UAAA,KAAK,EAAC,MAAnB;AAA0B,UAAA,IAAI,EAAE;AAAhC;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,cADF,eAYE;AAAQ,QAAA,SAAS,EAAC,UAAlB;AAA6B,QAAA,QAAQ,EAAEA,WAAW,KAAMT,KAAK,CAACc,QAAN,CAAeC,KAAf,CAAqBP,QAArB,IAAiC,CAAzF;AAA6F,QAAA,OAAO,EAAE,MACpGI,WAAW,CAACH,WAAW,GAAG,CAAf,CADb;AAAA,+BAEC,QAAC,YAAD;AAAc,UAAA,KAAK,EAAC,MAApB;AAA2B,UAAA,IAAI,EAAE;AAAjC;AAAA;AAAA;AAAA;AAAA;AAFD;AAAA;AAAA;AAAA;AAAA,cAZF;AAAA;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD;;GA3CuBH,Q;;KAAAA,Q;AA2CvB","sourcesContent":["import React, { ReactElement, useState } from 'react';\nimport { ChevronLeft, ChevronRight } from 'react-feather';\nimport { useWindowSize } from '../../talons/windowSize';\nimport { CarouselContainer } from './styles';\n\ntype Props = {\n  children: ReactElement[];\n};\n\nexport default function Carousel(props: Props) {\n const { children } = props;\n const [activeIndex, setActiveIndex] = useState(0);\n\n const windowSize = useWindowSize;\n\n const updateImage = (newIndex: number) => {\n  if (newIndex < 0) {\n    newIndex = React.Children.count(children) - 1;\n  } else if (newIndex >= React.Children.count(children) - 1) {\n    newIndex = 0;\n  }\n  setActiveIndex(newIndex);\n };\n\n//  if (!children) return null;\n\n  return (\n    <CarouselContainer>\n      <div className='inner' style={{ transform: `translateX(-${activeIndex * 25}%)`}}>\n        {React.Children.map(children, (child, _index) => {\n          return React.cloneElement(child, { width: \"33%\"});\n        })}\n      </div>\n      <div className='indicators'>\n        <button className='btn-prev' disabled={activeIndex <= 0} onClick={() => updateImage(activeIndex - 1)\n        }>\n          <ChevronLeft color=\"#fff\" size={36} />\n        </button>\n        {/* {React.Children.map(children, (_child, index) => {\n          return (\n            <button onClick={() => updateImage(index)}>\n              {index + 1}\n            </button>\n          )\n        })} */}\n        <button className='btn-next' disabled={activeIndex === (React.Children.count(children) - 1)} onClick={() =>\n          updateImage(activeIndex + 1)}>\n         <ChevronRight color=\"#fff\" size={36} />\n        </button>\n      </div>\n    </CarouselContainer>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}