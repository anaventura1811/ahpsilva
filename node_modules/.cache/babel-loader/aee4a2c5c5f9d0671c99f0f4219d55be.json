{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState, useCallback, useMemo } from 'react';\nexport function useWindowSize(props) {\n  _s();\n\n  const hasWindow = useMemo(() => typeof window !== 'undefined', []);\n  const getWindowDimensions = useCallback(() => {\n    const innerWidth = hasWindow ? window.innerWidth : null;\n    const innerHeight = hasWindow ? window.innerHeight : null;\n    return {\n      innerWidth,\n      innerHeight\n    };\n  }, [hasWindow]);\n  const [windowSize, setWindowSize] = useState(getWindowDimensions);\n  useEffect(() => {\n    if (hasWindow) {\n      const handleResize = () => {\n        setWindowSize(getWindowDimensions());\n      };\n\n      window.addEventListener('resize', handleResize);\n      return () => window.removeEventListener('resize', handleResize);\n    }\n  }, [getWindowDimensions, hasWindow]);\n  return windowSize;\n}\n\n_s(useWindowSize, \"lYZYLfEmq42XbhJQwizmQlm5g80=\");\n\n; //","map":{"version":3,"sources":["/Users/anaventura/workspace/ahpsilva-app/src/talons/windowSize/index.ts"],"names":["useEffect","useState","useCallback","useMemo","useWindowSize","props","hasWindow","window","getWindowDimensions","innerWidth","innerHeight","windowSize","setWindowSize","handleResize","addEventListener","removeEventListener"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,EAA8BC,WAA9B,EAA2CC,OAA3C,QAAyD,OAAzD;AAIA,OAAO,SAASC,aAAT,CAAuBC,KAAvB,EAAqC;AAAA;;AAE1C,QAAMC,SAAS,GAAGH,OAAO,CAAC,MAAM,OAAOI,MAAP,KAAkB,WAAzB,EAAsC,EAAtC,CAAzB;AAEA,QAAMC,mBAAmB,GAAGN,WAAW,CAAC,MAAM;AAC5C,UAAMO,UAAU,GAAGH,SAAS,GAAGC,MAAM,CAACE,UAAV,GAAwB,IAApD;AACA,UAAMC,WAAW,GAAGJ,SAAS,GAAGC,MAAM,CAACG,WAAV,GAAwB,IAArD;AACA,WAAO;AACLD,MAAAA,UADK;AAELC,MAAAA;AAFK,KAAP;AAID,GAPsC,EAOpC,CAACJ,SAAD,CAPoC,CAAvC;AASA,QAAM,CAACK,UAAD,EAAaC,aAAb,IAA8BX,QAAQ,CAACO,mBAAD,CAA5C;AAEAR,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIM,SAAJ,EAAe;AACb,YAAMO,YAAY,GAAG,MAAM;AACzBD,QAAAA,aAAa,CAACJ,mBAAmB,EAApB,CAAb;AACD,OAFD;;AAIAD,MAAAA,MAAM,CAACO,gBAAP,CAAwB,QAAxB,EAAkCD,YAAlC;AACA,aAAO,MAAMN,MAAM,CAACQ,mBAAP,CAA2B,QAA3B,EAAqCF,YAArC,CAAb;AACD;AACF,GATQ,EASN,CAACL,mBAAD,EAAsBF,SAAtB,CATM,CAAT;AAWA,SAAOK,UAAP;AACD;;GA3BeP,a;;AA2Bf,C,CAED","sourcesContent":["import { useEffect, useState, useCallback, useMemo} from 'react';\n\ntype Props = {};\n\nexport function useWindowSize(props: Props) {\n\n  const hasWindow = useMemo(() => typeof window !== 'undefined', []);\n\n  const getWindowDimensions = useCallback(() => {\n    const innerWidth = hasWindow ? window.innerWidth :  null;\n    const innerHeight = hasWindow ? window.innerHeight : null;\n    return {\n      innerWidth,\n      innerHeight\n    };\n  }, [hasWindow]);\n\n  const [windowSize, setWindowSize] = useState(getWindowDimensions);\n\n  useEffect(() => {\n    if (hasWindow) {\n      const handleResize = () => {\n        setWindowSize(getWindowDimensions());\n      }\n\n      window.addEventListener('resize', handleResize);\n      return () => window.removeEventListener('resize', handleResize);\n    }\n  }, [getWindowDimensions, hasWindow]);\n\n  return windowSize;\n};\n\n// "]},"metadata":{},"sourceType":"module"}