{"ast":null,"code":"var _jsxFileName = \"/Users/anaventura/workspace/ahpsilva-app/src/components/carousel/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { CarouselContainer } from './styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Carousel(props) {\n  _s();\n\n  const {\n    children\n  } = props;\n  const [activeIndex, setActiveIndex] = useState(null);\n\n  const updateImage = newIndex => {\n    if (newIndex < 0) {\n      console.log('index < 0, ok');\n      newIndex = React.Children.count(children) - 1;\n    } else if (newIndex >= React.Children.count(children)) {\n      newIndex = 0;\n      console.log('index > 0 click');\n    }\n\n    setActiveIndex(newIndex);\n  };\n\n  return /*#__PURE__*/_jsxDEV(CarouselContainer, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inner\",\n      style: {\n        transform: `translateX(-${activeIndex * 100})`\n      },\n      children: React.Children.map(children, (child, index) => {\n        return /*#__PURE__*/React.cloneElement(child, {\n          width: \"100%\"\n        });\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"indicators\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => updateImage(activeIndex - 1),\n        children: \"prev\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), React.Children.map(children, (_child, index) => {\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => updateImage(index),\n          children: index + 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => updateImage(activeIndex + 1),\n        children: \"next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Carousel, \"E8kOn+IkK/htiBGEqJWkEvOqULU=\");\n\n_c = Carousel;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"Carousel\");","map":{"version":3,"sources":["/Users/anaventura/workspace/ahpsilva-app/src/components/carousel/index.tsx"],"names":["React","useState","CarouselContainer","Carousel","props","children","activeIndex","setActiveIndex","updateImage","newIndex","console","log","Children","count","transform","map","child","index","cloneElement","width","_child"],"mappings":";;;AAAA,OAAOA,KAAP,IAA8BC,QAA9B,QAA8C,OAA9C;AACA,SAASC,iBAAT,QAAkC,UAAlC;;AAMA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAgC;AAAA;;AAC9C,QAAM;AAAEC,IAAAA;AAAF,MAAeD,KAArB;AACA,QAAM,CAACE,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC,IAAD,CAA9C;;AAEA,QAAMO,WAAW,GAAIC,QAAD,IAAsB;AACzC,QAAIA,QAAQ,GAAG,CAAf,EAAkB;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACAF,MAAAA,QAAQ,GAAGT,KAAK,CAACY,QAAN,CAAeC,KAAf,CAAqBR,QAArB,IAAiC,CAA5C;AACD,KAHD,MAGO,IAAII,QAAQ,IAAIT,KAAK,CAACY,QAAN,CAAeC,KAAf,CAAqBR,QAArB,CAAhB,EAAgD;AACrDI,MAAAA,QAAQ,GAAG,CAAX;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACD;;AAEDJ,IAAAA,cAAc,CAACE,QAAD,CAAd;AACA,GAVD;;AAYC,sBACE,QAAC,iBAAD;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAuB,MAAA,KAAK,EAAE;AAAEK,QAAAA,SAAS,EAAG,eAAcR,WAAW,GAAG,GAAI;AAA9C,OAA9B;AAAA,gBACGN,KAAK,CAACY,QAAN,CAAeG,GAAf,CAAmBV,QAAnB,EAA6B,CAACW,KAAD,EAAQC,KAAR,KAAkB;AAC9C,4BAAOjB,KAAK,CAACkB,YAAN,CAAmBF,KAAnB,EAA0B;AAAEG,UAAAA,KAAK,EAAE;AAAT,SAA1B,CAAP;AACD,OAFA;AADH;AAAA;AAAA;AAAA;AAAA,YADF,eAME;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACE;AAAQ,QAAA,OAAO,EAAE,MAAMX,WAAW,CAACF,WAAW,GAAG,CAAf,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAKGN,KAAK,CAACY,QAAN,CAAeG,GAAf,CAAmBV,QAAnB,EAA6B,CAACe,MAAD,EAASH,KAAT,KAAmB;AAC/C,4BACE;AAAQ,UAAA,OAAO,EAAE,MAAMT,WAAW,CAACS,KAAD,CAAlC;AAAA,oBACGA,KAAK,GAAG;AADX;AAAA;AAAA;AAAA;AAAA,gBADF;AAKD,OANA,CALH,eAYE;AAAQ,QAAA,OAAO,EAAE,MACfT,WAAW,CAACF,WAAW,GAAG,CAAf,CADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAZF;AAAA;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD;;GA1CuBH,Q;;KAAAA,Q;AA0CvB","sourcesContent":["import React, { ReactElement, useState } from 'react';\nimport { CarouselContainer } from './styles';\n\ntype Props = {\n  children: ReactElement[];\n}\n\nexport default function Carousel(props: Props) {\n const { children } = props;\n const [activeIndex, setActiveIndex] = useState(null);\n\n const updateImage = (newIndex: number) => {\n  if (newIndex < 0) {\n    console.log('index < 0, ok');\n    newIndex = React.Children.count(children) - 1;\n  } else if (newIndex >= React.Children.count(children)) {\n    newIndex = 0;\n    console.log('index > 0 click');\n  }\n\n  setActiveIndex(newIndex);\n }\n\n  return (\n    <CarouselContainer>\n      <div className='inner' style={{ transform: `translateX(-${activeIndex * 100})`}}>\n        {React.Children.map(children, (child, index) => {\n          return React.cloneElement(child, { width: \"100%\"});\n        })}\n      </div>\n      <div className='indicators'>\n        <button onClick={() => updateImage(activeIndex - 1)\n        }>\n          prev\n        </button>\n        {React.Children.map(children, (_child, index) => {\n          return (\n            <button onClick={() => updateImage(index)}>\n              {index + 1}\n            </button>\n          )\n        })}\n        <button onClick={() =>\n          updateImage(activeIndex + 1)}>\n          next\n        </button>\n      </div>\n    </CarouselContainer>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}