{"ast":null,"code":"var _jsxFileName = \"/Users/anaventura/workspace/ahpsilva-app/src/components/carousel/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { CarouselContainer } from './styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Carousel(props) {\n  _s();\n\n  const {\n    children\n  } = props;\n  const [activeIndex, setActiveIndex] = useState(0);\n\n  const updateImage = newIndex => {\n    if (newIndex < 0) {\n      newIndex = 0;\n    } else if (newIndex >= React.Children.count(children)) {\n      newIndex = React.Children.count(children) - 1;\n    }\n\n    setActiveIndex;\n  };\n\n  return /*#__PURE__*/_jsxDEV(CarouselContainer, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inner\",\n      style: {\n        transform: `translateX(-${activeIndex * 99})`\n      },\n      children: React.Children.map(children, (child, index) => {\n        return /*#__PURE__*/React.cloneElement(child, {\n          width: \"33%\"\n        });\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Carousel, \"rd+5N/MkYjuYD0I+B+MlySxQysU=\");\n\n_c = Carousel;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"Carousel\");","map":{"version":3,"sources":["/Users/anaventura/workspace/ahpsilva-app/src/components/carousel/index.tsx"],"names":["React","useState","CarouselContainer","Carousel","props","children","activeIndex","setActiveIndex","updateImage","newIndex","Children","count","transform","map","child","index","cloneElement","width"],"mappings":";;;AAAA,OAAOA,KAAP,IAA8BC,QAA9B,QAA8C,OAA9C;AACA,SAASC,iBAAT,QAAkC,UAAlC;;AAMA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAgC;AAAA;;AAC9C,QAAM;AAAEC,IAAAA;AAAF,MAAeD,KAArB;AACA,QAAM,CAACE,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC,CAAD,CAA9C;;AAEA,QAAMO,WAAW,GAAIC,QAAD,IAAc;AACjC,QAAIA,QAAQ,GAAG,CAAf,EAAkB;AAChBA,MAAAA,QAAQ,GAAG,CAAX;AACD,KAFD,MAEO,IAAIA,QAAQ,IAAIT,KAAK,CAACU,QAAN,CAAeC,KAAf,CAAqBN,QAArB,CAAhB,EAAgD;AACrDI,MAAAA,QAAQ,GAAGT,KAAK,CAACU,QAAN,CAAeC,KAAf,CAAqBN,QAArB,IAAiC,CAA5C;AACD;;AAEDE,IAAAA,cAAc;AACd,GARD;;AAUC,sBACE,QAAC,iBAAD;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAuB,MAAA,KAAK,EAAE;AAAEK,QAAAA,SAAS,EAAG,eAAcN,WAAW,GAAG,EAAG;AAA7C,OAA9B;AAAA,gBACGN,KAAK,CAACU,QAAN,CAAeG,GAAf,CAAmBR,QAAnB,EAA6B,CAACS,KAAD,EAAQC,KAAR,KAAkB;AAC9C,4BAAOf,KAAK,CAACgB,YAAN,CAAmBF,KAAnB,EAA0B;AAAEG,UAAAA,KAAK,EAAE;AAAT,SAA1B,CAAP;AACD,OAFA;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GAvBuBd,Q;;KAAAA,Q;AAuBvB","sourcesContent":["import React, { ReactElement, useState } from 'react';\nimport { CarouselContainer } from './styles';\n\ntype Props = {\n  children: ReactElement[];\n}\n\nexport default function Carousel(props: Props) {\n const { children } = props;\n const [activeIndex, setActiveIndex] = useState(0);\n\n const updateImage = (newIndex) => {\n  if (newIndex < 0) {\n    newIndex = 0;\n  } else if (newIndex >= React.Children.count(children)) {\n    newIndex = React.Children.count(children) - 1;\n  }\n\n  setActiveIndex\n }\n\n  return (\n    <CarouselContainer>\n      <div className='inner' style={{ transform: `translateX(-${activeIndex * 99})`}}>\n        {React.Children.map(children, (child, index) => {\n          return React.cloneElement(child, { width: \"33%\"});\n        })}\n      </div>\n    </CarouselContainer>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}